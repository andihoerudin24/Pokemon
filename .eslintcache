[{"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/index.js":"1","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/App.js":"2","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/helpers/routes.js":"3","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Header/Header.js":"4","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Home/Home.js":"5","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PokemonPage/PokemonPage.js":"6","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Pagination/Pagination.js":"7","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/SinglePokemonCard/SinglePokemonCard.js":"8","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/utils/api.js":"9","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FilterSection/FilterSection.js":"10","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/SortPokemon/SortPokemon.js":"11","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FilterPokemonType/FilterPokemonType.js":"12","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FilterPokemonName/FilterPokemonName.js":"13","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PageResultsCounter/PageResultsCounter.js":"14","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/contexts/ErrorsContext.js":"15","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/contexts/PokemonContext.js":"16","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PokemonDetails/PokemonDetails.js":"17","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Favourites/Favourites.js":"18","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Page404/Page404.js":"19","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FetchingError/FetchingError.js":"20","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PokemonDetailsCard/PokemonDetailsCard.js":"21","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/helpers/pokemon-types.js":"22","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Loading/Loading.js":"23"},{"size":219,"mtime":1607761050646,"results":"24","hashOfConfig":"25"},{"size":1555,"mtime":1607759750490,"results":"26","hashOfConfig":"25"},{"size":135,"mtime":1607759750586,"results":"27","hashOfConfig":"25"},{"size":1423,"mtime":1607760100519,"results":"28","hashOfConfig":"25"},{"size":843,"mtime":1607760070746,"results":"29","hashOfConfig":"25"},{"size":2989,"mtime":1607760185047,"results":"30","hashOfConfig":"25"},{"size":1158,"mtime":1607759750551,"results":"31","hashOfConfig":"25"},{"size":2239,"mtime":1607760565269,"results":"32","hashOfConfig":"25"},{"size":222,"mtime":1607759750590,"results":"33","hashOfConfig":"25"},{"size":451,"mtime":1607760761485,"results":"34","hashOfConfig":"25"},{"size":785,"mtime":1607760888557,"results":"35","hashOfConfig":"25"},{"size":846,"mtime":1607759750518,"results":"36","hashOfConfig":"25"},{"size":1074,"mtime":1607760923046,"results":"37","hashOfConfig":"25"},{"size":813,"mtime":1607759750542,"results":"38","hashOfConfig":"25"},{"size":430,"mtime":1607759750581,"results":"39","hashOfConfig":"25"},{"size":4002,"mtime":1607759750583,"results":"40","hashOfConfig":"25"},{"size":618,"mtime":1607761394374,"results":"41","hashOfConfig":"25"},{"size":1193,"mtime":1607761095338,"results":"42","hashOfConfig":"25"},{"size":587,"mtime":1607759750538,"results":"43","hashOfConfig":"25"},{"size":407,"mtime":1607759750513,"results":"44","hashOfConfig":"25"},{"size":3560,"mtime":1607761481846,"results":"45","hashOfConfig":"25"},{"size":1218,"mtime":1607759750585,"results":"46","hashOfConfig":"25"},{"size":363,"mtime":1607759750534,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s45x02",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/index.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/App.js",[],["100","101"],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/helpers/routes.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Header/Header.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Home/Home.js",["102"],"import React from 'react';\nimport './Home.css';\nimport heroImg from '../../assets/hero-img.jpg';\nimport pokemonAvatar from '../../assets/pokemon-avatar.svg';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../helpers/routes';\nimport pokemonPlaceholder from '../../assets/tokopedia.svg';\n\nconst Home = () => {\n  return (\n    <section\n      className='homepage'\n      style={{backgroundImage: `url(${heroImg})`}}\n    >\n      <div className='homepage__content'>\n        <h2>Selamat Datang</h2>\n        <img\n          src={pokemonPlaceholder}\n          alt='pokemon avatar'\n          className='pokemon-avatar'\n        />\n        <Link\n          to={routes.pokemon}\n          className='find-pokemon__btn'\n        >\n          Cari Pokemon Kesukaan Agan Ya\n        </Link>\n      </div>\n    </section>\n  )\n}\n\nexport default Home;","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PokemonPage/PokemonPage.js",["103"],"import React, { useContext, useEffect } from 'react';\nimport { PokemonContext } from '../../contexts/PokemonContext';\nimport { ErrorsContext } from '../../contexts/ErrorsContext';\nimport SinglePokemonCard from '../SinglePokemonCard/SinglePokemonCard';\nimport noPokemonFound from '../../assets/no-pokemon-found.svg';\nimport Pagination from '../Pagination/Pagination';\nimport './PokemonPage.css';\nimport FilterSection from '../FilterSection/FilterSection';\nimport FetchingError from '../FetchingError/FetchingError';\n\nconst PokemonPage = () => {\n\n  const { currentPageResults, nameInputValue, chosenPokemonType, pokemonCache, setChosenPokemonType, setNameInputValue } = useContext(PokemonContext);\n  const { fetchingError } = useContext(ErrorsContext);\n\n  useEffect(() => {\n    setChosenPokemonType('all');\n    setNameInputValue('');\n  }, []);\n\n  const filterByType = (currentPageResults, chosenPokemonType) => {\n    if (chosenPokemonType === '' || chosenPokemonType === 'all') {\n      return currentPageResults;\n    }\n    let filteredCurrentPageResult = [];\n    for (let i = 0; i < currentPageResults.length; i++) {\n      let pokemonName = currentPageResults[i].name;\n\n      let pokemon = pokemonCache[pokemonName];\n      if (pokemonCache[pokemonName]) {\n        let pokemonType = pokemon.types.map(({type}) => type.name);\n        if (pokemonType.includes(chosenPokemonType)) {\n          filteredCurrentPageResult.push(currentPageResults[i])\n        }\n      }\n    }\n    return filteredCurrentPageResult;\n  }\n\n  let filteredByName = [];\n\n    filteredByName = currentPageResults.filter(pokemon => pokemon.name.toLowerCase().includes(nameInputValue.toLowerCase()));\n\n    const filteredByType = filterByType(filteredByName, chosenPokemonType);\n\n  return (\n    <section className='pokemons__page'>\n\n      {\n        fetchingError === true\n          ? <FetchingError />\n          : <>\n              <FilterSection />\n              <div className='pokemons-names__wrapper'>\n                <ul className='pokemons-names__list'>\n                  {\n                    filteredByType &&\n                    filteredByType.length > 0\n                      ? (\n                        filteredByType.map(({ name }) => (\n                          <SinglePokemonCard\n                            key={name}\n                            name={name}\n                          />\n                        ))\n                      )\n                      : (\n                        <div>\n                          <h3>No Pokemon found. Type something different.</h3>\n                          <img\n                            src={noPokemonFound}\n                            className='no-pokemon__img'\n                            alt='no Pokemon found'\n                          />\n                        </div>\n                      )\n                    }\n                </ul>\n              </div>\n              <Pagination />\n            </>\n\n      }\n\n    </section>\n  );\n}\n\nexport default PokemonPage;\n","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Pagination/Pagination.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/SinglePokemonCard/SinglePokemonCard.js",["104","105"],"import React, { useContext, useEffect } from 'react';\nimport { PokemonContext } from '../../contexts/PokemonContext';\nimport { ErrorsContext } from '../../contexts/ErrorsContext';\nimport { fetchSinglePokemonDetails } from '../../utils/api';\nimport pokemonPlaceholder from '../../assets/pokemon-placeholder.svg';\nimport addTofavIcon from '../../assets/add_to_fav_icon.svg';\nimport favIcon from '../../assets/fav_icon.svg';\nimport { Link } from 'react-router-dom';\nimport './SinglePokemonCard.css';\nimport pokemonTypes from  '../../helpers/pokemon-types';\n\nconst SinglePokemonCard = ({ name }) => {\n\n  const { pokemonCache, setPokemonCache, isPokemonFavourite, toggleFavourites, setCurrentPokemonTypes, currentPageResults } = useContext(PokemonContext);\n\n  const { setFetchingError } = useContext(ErrorsContext);\n\n  // get unique types per current page\n  const getUniqueTypes = (types) => {\n    return types.map(({ type }) => (setCurrentPokemonTypes((prevTypes => [...new Set([...prevTypes, type.name])]))\n    ));\n  }\n\n  useEffect(() => {\n    if(!pokemonCache[name]) {\n      fetchSinglePokemonDetails(name)\n        .then(pokemonDescription => {\n          setPokemonCache((prevDetails) => ({\n            ...prevDetails,\n            [name]: pokemonDescription\n          }));\n          getUniqueTypes(pokemonDescription.types);\n        })\n        .catch(() => setFetchingError(true));\n    } else {\n      getUniqueTypes(pokemonCache[name].types);\n    }\n  }, [currentPageResults]);\n\n  return (\n    <li className='pokemons-names__item'>\n      <img\n          alt='add to favourites'\n          src={isPokemonFavourite(name) ? favIcon : addTofavIcon}\n          className='add-to-fav__img--list'\n          onClick={() => toggleFavourites(name)}\n        />\n      <h3 className='single-pokemon__name'>{name}</h3>\n      <img\n        alt={name}\n        src={pokemonCache[name] ? pokemonCache[name].sprites.front_default : pokemonPlaceholder}\n        className='single-pokemon__img'\n      />\n      {\n        pokemonCache[name] &&\n        <>\n        <Link\n          to={`/pokemon-page/${name}`}\n          className='btn single-pokemon__btn'\n        >\n          details\n        </Link>\n        </>\n      }\n    </li>\n\n  );\n}\n\nexport default SinglePokemonCard;","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/utils/api.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FilterSection/FilterSection.js",["106"],"import React from 'react';\nimport SortPokemon from '../SortPokemon/SortPokemon';\nimport FilterPokemonName from '../FilterPokemonName/FilterPokemonName';\nimport './FilterSection.css';\nimport FilterPokemonType from '../FilterPokemonType/FilterPokemonType';\n\nconst FilterSection = () => (\n  <section className='filter-pokemon'>\n    <SortPokemon />\n    {/* <FilterPokemonType /> */}\n    <FilterPokemonName />\n  </section>\n);\n\nexport default FilterSection;","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/SortPokemon/SortPokemon.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FilterPokemonType/FilterPokemonType.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FilterPokemonName/FilterPokemonName.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PageResultsCounter/PageResultsCounter.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/contexts/ErrorsContext.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/contexts/PokemonContext.js",["107"],"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ErrorsContext } from './ErrorsContext';\n\nexport const PokemonContext = createContext();\n\nconst PokemonContextProvider = (props) => {\n\n  const [ pokemonCache, setPokemonCache ] = useState({});\n  const [ currentPage, setCurrentPage ] = useState(1);\n  const [ currentPageResults, setCurrentPageResults ] = useState([]);\n  const [ allPokemonCount, setAllPokemonCount ] = useState(0);\n  const [ limitValue, setLimitValue ] = useState(10);\n  const [ nameInputValue, setNameInputValue ] = useState('');\n  const [ currentPokemonTypes, setCurrentPokemonTypes ] = useState([]);\n  const [ chosenPokemonType, setChosenPokemonType ] = useState('');\n  const favouritesFromLocalStorage = JSON.parse(localStorage.getItem('favourites'));\n  const [ favourites, setFavourites ] = useState(favouritesFromLocalStorage === null ? [] : favouritesFromLocalStorage);\n\n  const { setFetchingError } = useContext(ErrorsContext);\n\n  useEffect(() => {\n    setCurrentPokemonTypes([]);\n\n    fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limitValue}&offset=${limitValue * (currentPage - 1)}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log('data',data.results)\n        setCurrentPageResults(data.results);\n        setAllPokemonCount(data.count);\n      })\n      .catch(() => setFetchingError(true));\n\n  }, [currentPage, limitValue]);\n\n  // update current Pokemon list on page change\n  const updatePokemonResults = (direction) => {\n    setChosenPokemonType('all');\n    setNameInputValue('');\n    setCurrentPage((c) => {\n      if (direction === 'prev') {\n        const firstPage = 1;\n        if (c - 1 <= firstPage) {\n          return firstPage;\n        }\n        return c - 1;\n      }\n      if (direction === 'next') {\n        const lastPage = Math.ceil(allPokemonCount / limitValue);\n        if (c + 1 >= lastPage) {\n          return lastPage;\n        }\n        return c + 1;\n      }\n    });\n  }\n\n  // add favourite Pokemon names to localStorage\n  useEffect(() => {\n    localStorage.setItem('favourites', JSON.stringify(favourites))\n  }, [favourites])\n\n  // sort Pokemon\n  const sortAZ= () => {\n    const sortedAZ = currentPageResults.sort((a, b) => a.name > b.name ? 1 : -1);\n    setCurrentPageResults([...sortedAZ]);\n  }\n\n  const sortZA= () => {\n    const sortedZA = currentPageResults.sort((a, b) => a.name > b.name ? -1 : 1);\n    setCurrentPageResults([...sortedZA]);\n  }\n\n  const handleSortFilterChange = (chosenFilter) => {\n    if (chosenFilter === 'a-z') {\n      sortAZ()\n    }\n    if (chosenFilter === 'z-a') {\n      sortZA()\n    }\n  }\n\n  // check if Pokemon is already favourite\n  const isPokemonFavourite = (pokemonName) => {\n    const pokemonInFavourites = favourites.find(favourite => favourite === pokemonName)\n    if (pokemonInFavourites) {\n      return true;\n    }\n    if(!pokemonInFavourites) {\n      return false;\n    }\n  }\n\n  // add Pokemon to/remove from favourites\n  const toggleFavourites = (pokemonName) => {\n    if (isPokemonFavourite(pokemonName)) {\n      const updatedFavourites = favourites.filter((favourite => favourite !== pokemonName));\n      setFavourites([...updatedFavourites])\n    }\n    if (!isPokemonFavourite(pokemonName)) {\n      const updatedFavourites = favourites.concat([pokemonName])\n      setFavourites([...updatedFavourites])\n    }\n  }\n\n  return (\n    <PokemonContext.Provider\n      value={{\n        pokemonCache,\n        setPokemonCache,\n        currentPage,\n        currentPageResults,\n        allPokemonCount,\n        updatePokemonResults,\n        handleSortFilterChange,\n        nameInputValue,\n        setNameInputValue,\n        favourites,\n        isPokemonFavourite,\n        toggleFavourites,\n        currentPokemonTypes,\n        setCurrentPokemonTypes,\n        chosenPokemonType,\n        setChosenPokemonType,\n        limitValue,\n        setLimitValue\n      }}\n    >\n      {props.children}\n    </PokemonContext.Provider>\n  )\n}\n\nexport default PokemonContextProvider;","/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PokemonDetails/PokemonDetails.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Favourites/Favourites.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Page404/Page404.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/FetchingError/FetchingError.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/PokemonDetailsCard/PokemonDetailsCard.js",["108","109"],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/helpers/pokemon-types.js",[],"/Users/andihoerudin/Documents/tokopedia/andi-tokopedia/src/components/Loading/Loading.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":19,"column":6,"nodeType":"120","endLine":19,"endColumn":8,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"122","line":10,"column":8,"nodeType":"116","messageId":"117","endLine":10,"endColumn":20},{"ruleId":"118","severity":1,"message":"123","line":38,"column":6,"nodeType":"120","endLine":38,"endColumn":26,"suggestions":"124"},{"ruleId":"114","severity":1,"message":"125","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":25},{"ruleId":"118","severity":1,"message":"126","line":33,"column":6,"nodeType":"120","endLine":33,"endColumn":31,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":29,"column":6,"nodeType":"120","endLine":29,"endColumn":8,"suggestions":"129"},{"ruleId":"114","severity":1,"message":"130","line":69,"column":31,"nodeType":"116","messageId":"117","endLine":69,"endColumn":39},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'pokemonAvatar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setChosenPokemonType' and 'setNameInputValue'. Either include them or remove the dependency array.","ArrayExpression",["133"],"'pokemonTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'getUniqueTypes', 'name', 'pokemonCache', 'setFetchingError', and 'setPokemonCache'. Either include them or remove the dependency array.",["134"],"'FilterPokemonType' is defined but never used.","React Hook useEffect has a missing dependency: 'setFetchingError'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'pokemonCache', 'pokemonName', 'setFetchingError', and 'setPokemonCache'. Either include them or remove the dependency array.",["136"],"'typeIcon' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [setChosenPokemonType, setNameInputValue]",{"range":"145","text":"146"},"Update the dependencies array to be: [currentPageResults, getUniqueTypes, name, pokemonCache, setFetchingError, setPokemonCache]",{"range":"147","text":"148"},"Update the dependencies array to be: [currentPage, limitValue, setFetchingError]",{"range":"149","text":"150"},"Update the dependencies array to be: [pokemonCache, pokemonName, setFetchingError, setPokemonCache]",{"range":"151","text":"152"},[837,839],"[setChosenPokemonType, setNameInputValue]",[1452,1472],"[currentPageResults, getUniqueTypes, name, pokemonCache, setFetchingError, setPokemonCache]",[1390,1415],"[currentPage, limitValue, setFetchingError]",[1188,1190],"[pokemonCache, pokemonName, setFetchingError, setPokemonCache]"]